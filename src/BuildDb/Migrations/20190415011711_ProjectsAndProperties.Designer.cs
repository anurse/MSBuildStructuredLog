// <auto-generated />
using System;
using Microsoft.Build.Logging.BuildDb.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Microsoft.Build.Logging.BuildDb.Migrations
{
    [DbContext(typeof(BuildDbContext))]
    [Migration("20190415011711_ProjectsAndProperties")]
    partial class ProjectsAndProperties
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndTime");

                    b.Property<DateTime>("StartTime");

                    b.Property<bool>("Succeeded");

                    b.HasKey("Id");

                    b.ToTable("Builds");
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.BuildProperty", b =>
                {
                    b.Property<int>("BuildId");

                    b.Property<int>("PropertyId");

                    b.HasKey("BuildId", "PropertyId");

                    b.HasIndex("PropertyId");

                    b.ToTable("BuildProperties");
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuildId");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Name");

                    b.Property<int>("ProjectContextId");

                    b.Property<string>("ProjectFile");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("BuildId", "ProjectContextId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.ProjectProperty", b =>
                {
                    b.Property<int>("ProjectId");

                    b.Property<int>("PropertyId");

                    b.Property<bool>("Global");

                    b.HasKey("ProjectId", "PropertyId");

                    b.HasIndex("PropertyId");

                    b.ToTable("ProjectProperties");
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.BuildProperty", b =>
                {
                    b.HasOne("Microsoft.Build.Logging.BuildDb.Model.Build", "Build")
                        .WithMany("Environment")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.Build.Logging.BuildDb.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.Project", b =>
                {
                    b.HasOne("Microsoft.Build.Logging.BuildDb.Model.Build", "Build")
                        .WithMany("Projects")
                        .HasForeignKey("BuildId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.Build.Logging.BuildDb.Model.ProjectProperty", b =>
                {
                    b.HasOne("Microsoft.Build.Logging.BuildDb.Model.Project", "Project")
                        .WithMany("Properties")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.Build.Logging.BuildDb.Model.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
